  return (
    // ...
    <div className={`chat-bubble w-full ${messageBgClass}`}>
      <ReactMarkdown
        components={{
          code({ node, inline, className, children, ...props }) {
            const match = /language-(\w+)/.exec(className || "");
            return !inline && match ? (
              <SyntaxHighlighter
                {...props}
                style={selectedTheme.theme === "dark" ? oneDark : oneLight}
                language={match[1]}
                PreTag="div"
              >
                {String(children).replace(/\n$/, "")}
              </SyntaxHighlighter>
            ) : (
              <code {...props} className={className}>
                {children}
              </code>
            );
          },
        }}
      >
        {typeof message.content === 'string' ? message.content : ''} {/* ИЗМЕНЕНО: Добавлена проверка типа */}
      </ReactMarkdown>
    </div>
    // ...
  );
};

export default MEMOMessage;
