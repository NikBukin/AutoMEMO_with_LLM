Уже была функция в api.py

## Retrieve and search documents imported to Weaviate
@app.post("/api/get_all_documents")
async def get_all_documents(payload: SearchQueryPayload):
    try:
        client = await client_manager.connect(payload.credentials)
        documents, total_count = await manager.weaviate_manager.get_documents(
            client,
            payload.query,
            payload.pageSize,
            payload.page,
            payload.labels,
            properties=["title", "extension", "fileSize", "labels", "source", "meta"],
        )
        labels = await manager.weaviate_manager.get_labels(client)

        msg.good(f"Succesfully retrieved document: {len(documents)} documents")
        return JSONResponse(
            content={
                "documents": documents,
                "labels": labels,
                "error": "",
                "totalDocuments": total_count,
            }
        )
    except Exception as e:
        msg.fail(f"Retrieving all documents failed: {str(e)}")
        return JSONResponse(
            content={
                "documents": [],
                "label": [],
                "error": f"All Document retrieval failed: {str(e)}",
                "totalDocuments": 0,
            }
        )



Но мы еще добавили:
# Добавьте этот класс полезной нагрузки для запроса документов
class GetAllDocumentsMetadataPayload(BaseModel):
    credentials: Credentials

# Добавьте этот эндпоинт
@app.post("/api/get_all_documents_metadata")
async def get_all_documents_metadata(payload: GetAllDocumentsMetadataPayload):
    try:
        client = await client_manager.connect(payload.credentials)
        documents_metadata = await manager.weaviate_manager.retrieve_all_documents_metadata(client)
        return JSONResponse(
            content={
                "documents": documents_metadata,
            }
        )
    except Exception as e:
        msg.fail(f"Error getting all document metadata: {e}")
        return JSONResponse(
            content={
                "documents": [],
            },
            status_code=500
        )


